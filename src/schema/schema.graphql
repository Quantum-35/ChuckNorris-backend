scalar DateTime

type Query {
    users(query: String): [User!]!
    user(email: String!): User!
    jokes(query: String): Jokes!
    categoryJokes(category: String!): Jokes!
    categories(query: String): [String]!
}

type User {
    email: String
    # password: String
}

type SignInType {
    email: String
    token: String
}

type Jokes {
    created_at: DateTime!
    icon_url: String!
    id: ID!
    updated_at: DateTime!
    url: String!
    value: String!
    categories: [String!]
}

# Inputs
input CreateUserInput {
    email: String!
    password: String!
}

input SignInInput {
    email: String!
    password: String!
}

input CreateJokesInput {
    icon_url: String!
    url: String!
    value: String!
}

input CreateCategoryInput {
    name: String
}

# Mutation
type Mutation {
    createUser(data: CreateUserInput!): User!
    signIn(data: SignInInput!): SignInType!
    createJoke(data: CreateJokesInput!): Jokes!
    createCategory(data: CreateCategoryInput!): [String]!
}
